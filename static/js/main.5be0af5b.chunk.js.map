{"version":3,"sources":["components/square/Square.jsx","components/muncher/Muncher.jsx","components/notification/Notification.jsx","components/board/Board.jsx","objects/games.js","objects/Multiples.js","components/keyboard/Keyboard.jsx","components/game/Game.jsx","index.jsx"],"names":["Square","props","cell","value","id","className","Muncher","ref","el","muncher","style","left","getBoundingClientRect","width","position","x","top","height","y","Notification","message","getRow","r","squares","row","int","push","Board","alert","notification","trim","rows","getRows","GAME_TYPES","Multiples","minNum","maxNum","maxMult","this","minMult","resetNumber","oldNumber","number","Math","floor","random","rand","factor","Keyboard","up","down","right","space","type","onClick","Game","game","state","level","score","lives","setupBoard","keyDown","bind","document","addEventListener","event","code","removeEventListener","Array","WIDTH","i","length","numberFill","update","munch","checkLevel","moveMuncher","setState","xc","yc","min","max","HEIGHT","getGame","getMultiple","isValid","isMultiple","inputs","compare","slice","toLowerCase","getNumber","munchers","React","Component","ReactDOM","render","getElementById"],"mappings":"qWAYeA,MATf,SAAgBC,GACZ,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,OACI,qBAAgBC,GAAE,WAAMF,GAAQG,UAAU,SAA1C,SACKF,GADKD,I,YCeHI,MAlBf,SAAiBL,GACb,OACI,qBACIM,IAAK,SAACC,GACF,IAAMC,EAAUD,EACXC,IACLA,EAAQC,MAAMC,KAAd,UACIF,EAAQG,wBAAwBC,MAAQZ,EAAMa,SAASC,EAD3D,MAGAN,EAAQC,MAAMM,IAAd,UACIP,EAAQG,wBAAwBK,OAAShB,EAAMa,SAASI,EAD5D,QAIJb,UAAU,a,MCFPc,MAXf,SAAsBlB,GAClB,IAAQmB,EAAYnB,EAAZmB,QACR,OACI,sBAAKf,UAAU,eAAf,UACKe,EACD,uBAFJ,mCC6BR,SAASC,EAAOR,EAAOS,EAAGC,GAEtB,IADA,IAAMC,EAAM,GACHtB,EAAO,EAAGA,EAAOW,EAAOX,IAAQ,CACrC,IAAMuB,EAAMH,EAAIT,EAAQX,EACxBsB,EAAIE,KAAK,cAAC,EAAD,CAAwBxB,KAAMuB,EAAKtB,MAAOoB,EAAQE,IAAlD,WAAiBA,KAE9B,OAAOD,EAGIG,MAtCf,SAAe1B,GACX,IACI2B,EADIX,EAAkDhB,EAAlDgB,OAAQJ,EAA0CZ,EAA1CY,MAAOU,EAAmCtB,EAAnCsB,QAASd,EAA0BR,EAA1BQ,QAASoB,EAAiB5B,EAAjB4B,aAErB,MAAhBA,GAAgD,KAAxBA,EAAaC,SACrCF,EAAQ,cAAC,EAAD,CAAcR,QAASS,KAEnC,IAAME,EAUV,SAAiBd,EAAQJ,EAAOU,GAE5B,IADA,IAAMQ,EAAO,GACJT,EAAI,EAAGA,EAAIL,EAAQK,IAAK,CAC7B,IAAME,EAAMH,EAAOR,EAAOS,EAAGC,GAC7BQ,EAAKL,KACD,qBAAqBrB,UAAU,YAA/B,SACKmB,GADL,aAAgBF,KAKxB,OAAOS,EApBMC,CAAQf,EAAQJ,EAAOU,GACpC,OACI,sBAAKlB,UAAU,QAAf,UACI,cAAC,EAAD,CAASS,SAAUL,IAClBmB,EACAG,MCjBAE,EACE,YC+CAC,E,WA7CX,aAAkD,IAAtCC,EAAqC,uDAA5B,EAAGC,EAAyB,uDAAhB,EAAGC,EAAa,uDAAH,EAAG,oBAC7CC,KAAKH,OAASA,EACdG,KAAKF,OAASA,EACdE,KAAKC,QAAU,EACfD,KAAKD,QAAUA,EAEfC,KAAKE,c,+CAGT,WAEI,IADA,IAAMC,EAAYH,KAAKI,OAChBD,IAAcH,KAAKI,QACtBJ,KAAKI,OAASC,KAAKC,MACfN,KAAKH,OAASQ,KAAKE,UAAYP,KAAKF,OAASE,KAAKH,OAAS,M,qBAMvE,WACI,OAAOF,I,uBAGX,WACI,OAAOK,KAAKI,S,yBAGhB,WAEI,GAAIC,KAAKE,SAAW,GAChB,OAAOF,KAAKC,MAAMD,KAAKE,UAAYP,KAAKD,QAAUC,KAAKI,SAI3D,IAAMI,EAAOH,KAAKC,MACdN,KAAKC,QAAUI,KAAKE,UAAYP,KAAKD,QAAUC,KAAKC,UAExD,OAAOD,KAAKI,OAASI,I,wBAGzB,SAAWC,GACP,OAAOA,EAAST,KAAKI,SAAW,M,WClBzBM,MAvBf,SAAkB/C,GACd,IAAQgD,EAAiChD,EAAjCgD,GAAIC,EAA6BjD,EAA7BiD,KAAMvC,EAAuBV,EAAvBU,KAAMwC,EAAiBlD,EAAjBkD,MAAOC,EAAUnD,EAAVmD,MAC/B,OACI,sBAAK/C,UAAU,WAAf,UACI,wBAAQgD,KAAK,SAAShD,UAAU,KAAKiD,QAASL,EAA9C,gBAGA,wBAAQI,KAAK,SAAShD,UAAU,OAAOiD,QAAS3C,EAAhD,kBAGA,wBAAQ0C,KAAK,SAAShD,UAAU,QAAQiD,QAASH,EAAjD,mBAGA,wBAAQE,KAAK,SAAShD,UAAU,OAAOiD,QAASJ,EAAhD,kBAGA,wBAAQG,KAAK,SAAShD,UAAU,QAAQiD,QAASF,EAAjD,uBC0MGG,E,kDAlNX,WAAYtD,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAMuD,EAAO,IAAItB,EACXzB,EAAU,CAAEM,EAAG,EAAGG,EAAG,GAHZ,OAIf,EAAKuC,MAAQ,CACTD,OACAE,MAAO,EACPC,MAAO,EACPC,MAAO,EACP/B,aAAc,GACdpB,UACAc,QAAS,EAAKsC,WAAWL,EAAM/C,IAGnC,EAAKqD,QAAU,EAAKA,QAAQC,KAAb,gBAdA,E,qDAiBnB,WAAqB,IAAD,OAChBC,SAASC,iBAAiB,WAAW,SAACC,GAClC,EAAKJ,QAAQI,EAAMC,W,kCAI3B,WACIH,SAASI,oBAAoB,UAAW9B,KAAKwB,W,wBAGjD,SAAWN,EAAM/C,GACb+C,EAAKhB,cACL,IAAMjB,EAAU8C,MAAMC,IACtB/C,EAlCM,EAkCEd,EAAQS,EAAYT,EAAQM,GAAK,GACzC,IAAK,IAAIwD,EAAI,EAAGA,EAAIhD,EAAQiD,OAAQD,IACb,KAAfhD,EAAQgD,KACRhD,EAAQgD,GAAKjC,KAAKmC,WAAWjB,IAGrC,OAAOjC,I,qBAGX,SAAQ4C,GACJ,MAAwC7B,KAAKmB,MAArC5B,EAAR,EAAQA,aAAc2B,EAAtB,EAAsBA,KAAM/C,EAA5B,EAA4BA,QAC5B,GAAqB,KAAjBoB,EACA,OAAQsC,GACJ,IAAK,QAED,GADA7B,KAAKoC,OAAOpC,KAAKqC,SACbrC,KAAKsC,aAAc,CACnB,IAAQlB,EAAUpB,KAAKmB,MAAfC,MACRpB,KAAKuC,YAAY,EAAIpE,EAAQM,EAAG,EAAIN,EAAQS,GAC5CoB,KAAKwC,SAAS,CACVjD,aAAc,sBACd6B,MAAOA,EAAQ,EACfnC,QAASe,KAAKuB,WAAWL,EAAM,CAC3BzC,EAAG,EACHG,EAAG,MAIf,MACJ,IAAK,YACDoB,KAAKuC,aAAa,EAAG,GACrB,MACJ,IAAK,aACDvC,KAAKuC,YAAY,EAAG,GACpB,MACJ,IAAK,UACDvC,KAAKuC,YAAY,GAAI,GACrB,MACJ,IAAK,YACDvC,KAAKuC,YAAY,EAAG,OAKZ,UAATV,GACP7B,KAAKwC,SAAS,CAAEjD,aAAc,O,yBAItC,SAAYkD,EAAIC,GACZ,IAAQvE,EAAY6B,KAAKmB,MAAjBhD,QACR6B,KAAKwC,SAAS,CACVrE,QAAS,CACLM,EAAG4B,KAAKsC,IAAItC,KAAKuC,IAAI,EAAGzE,EAAQM,EAAIgE,GAAKT,GACzCpD,EAAGyB,KAAKsC,IAAItC,KAAKuC,IAAI,EAAGzE,EAAQS,EAAI8D,GAAKG,Q,wBAMrD,SAAW3B,GACP,OAAQA,EAAK4B,WACT,KAAKnD,EACD,OAAOuB,EAAK6B,cAChB,QACI,MAAO,M,mBAInB,WAEI,IAMIC,EANJ,EAAmChD,KAAKmB,MAAhClC,EAAR,EAAQA,QAASd,EAAjB,EAAiBA,QAAS+C,EAA1B,EAA0BA,KACpBrD,EAAQoB,EAzGR,EAyGgBd,EAAQS,EAAYT,EAAQM,GAMlD,OALAQ,EA1GM,EA0GEd,EAAQS,EAAYT,EAAQM,GAAK,GACzCuB,KAAKwC,SAAS,CAAEvD,YAIRiC,EAAK4B,WACT,KAAKnD,EACDqD,EAAU9B,EAAK+B,WAAWpF,GAC1B,MACJ,QACImF,GAAU,EAElB,MAAO,CAAEA,UAASnF,W,oBAGtB,SAAOqF,GACH,IAAQF,EAAmBE,EAAnBF,QAASnF,EAAUqF,EAAVrF,MACjB,EAAuBmC,KAAKmB,MAAtBE,EAAN,EAAMA,MAAOC,EAAb,EAAaA,MACLJ,EAASlB,KAAKmB,MAAdD,KAER,GAAI8B,GAAqB,KAAVnF,EACXwD,GAAS,OACN,IAAK2B,EAAS,CACjB,IAAMG,EAAUjC,EAAK4B,UAAUM,MAAM,EAAGlC,EAAK4B,UAAUZ,OAAS,GAChElC,KAAKwC,SAAS,CACVjD,aAAa,IAAD,OAAM1B,EAAN,sBAAyBsF,EAAQE,cAAjC,gBAAsDnC,EAAKoC,YAA3D,QAEhBhC,IAEJtB,KAAKwC,SAAS,CAAEnB,QAAOC,UACT,IAAVA,GACAtB,KAAKwC,SAAS,CACVvD,QAASe,KAAKuB,WAAWL,EAAM,CAAEzC,EAAG,EAAGG,EAAG,IAC1CT,QAAS,CAAEM,EAAG,EAAGG,EAAG,GACpByC,MAAO,EACPC,MAAO,EACPF,MAAO,EACP7B,aAAc,yB,wBAK1B,WAEI,IADA,MAA0BS,KAAKmB,MAAvBlC,EAAR,EAAQA,QAASiC,EAAjB,EAAiBA,KACRe,EAAI,EAAGA,EAAIhD,EAAQiD,OAAQD,IAChC,GAAmB,KAAfhD,EAAQgD,GACR,OAAQf,EAAK4B,WACT,KAAKnD,EACD,GAAIuB,EAAK+B,WAAWhE,EAAQgD,IACxB,OAAO,EAEX,MACJ,QACI,OAAO,EAIvB,OAAO,I,oBAGX,WAYI,IAZM,IAAD,OACL,EAQIjC,KAAKmB,MAPLC,EADJ,EACIA,MACAF,EAFJ,EAEIA,KACA/C,EAHJ,EAGIA,QACAc,EAJJ,EAIIA,QACAoC,EALJ,EAKIA,MACAC,EANJ,EAMIA,MACA/B,EAPJ,EAOIA,aAGEgE,EAAW,GACRtB,EAAI,EAAGA,EAAIX,EAAOW,IACvBsB,EAASnE,KAAK,sBAAcrB,UAAU,QAAbkE,IAG7B,OACI,sBAAKlE,UAAU,OAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,0BAAkCqD,KAClC,qBAAKrD,UAAU,QAAf,mBAA2BmD,EAAK4B,UAAhC,eAAgD5B,EAAKoC,kBAEzD,cAAC,EAAD,CACI3E,OA5LL,EA6LKJ,MA9LN,EA+LMJ,QAASA,EACTc,QAASA,EACTM,aAAcA,IAElB,sBAAKxB,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,UACI,0CAAoB,IACpB,sBAAMA,UAAU,SAAhB,SAA0BsD,OAE9B,qBAAKtD,UAAU,QAAf,SAAwBwF,OAE5B,cAAC,EAAD,CACI5C,GAAI,kBAAM,EAAKa,QAAQ,YACvBZ,KAAM,kBAAM,EAAKY,QAAQ,cACzBnD,KAAM,kBAAM,EAAKmD,QAAQ,cACzBX,MAAO,kBAAM,EAAKW,QAAQ,eAC1BV,MAAO,kBAAM,EAAKU,QAAQ,mB,GA5M3BgC,IAAMC,W,MCLzBC,IAASC,OAAO,cAAC,EAAD,IAAUjC,SAASkC,eAAe,W","file":"static/js/main.5be0af5b.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nfunction Square(props) {\n    const { cell, value } = props;\n    return (\n        <div key={cell} id={`c${cell}`} className=\"square\">\n            {value}\n        </div>\n    );\n}\n\nexport default Square;\n","import React from 'react';\nimport './Muncher.css';\n\nfunction Muncher(props) {\n    return (\n        <div\n            ref={(el) => {\n                const muncher = el;\n                if (!muncher) return;\n                muncher.style.left = `${\n                    muncher.getBoundingClientRect().width * props.position.x\n                }px`;\n                muncher.style.top = `${\n                    muncher.getBoundingClientRect().height * props.position.y\n                }px`;\n            }}\n            className=\"muncher\"\n        />\n    );\n}\n\nexport default Muncher;\n","import React from 'react';\nimport './Notification.css';\n\nfunction Notification(props) {\n    const { message } = props;\n    return (\n        <div className=\"notification\">\n            {message}\n            <br />\n            Press Space Bar to continue.\n        </div>\n    );\n}\n\nexport default Notification;\n","import React from 'react';\nimport Square from '../square/Square';\nimport './Board.css';\nimport Muncher from '../muncher/Muncher';\nimport Notification from '../notification/Notification';\n\nfunction Board(props) {\n    const { height, width, squares, muncher, notification } = props;\n    let alert;\n    if (notification != null && notification.trim() !== '') {\n        alert = <Notification message={notification} />;\n    }\n    const rows = getRows(height, width, squares);\n    return (\n        <div className=\"board\">\n            <Muncher position={muncher} />\n            {alert}\n            {rows}\n        </div>\n    );\n}\n\nfunction getRows(height, width, squares) {\n    const rows = [];\n    for (let r = 0; r < height; r++) {\n        const row = getRow(width, r, squares);\n        rows.push(\n            <div key={`row${r}`} className=\"board-row\">\n                {row}\n            </div>\n        );\n    }\n    return rows;\n}\n\nfunction getRow(width, r, squares) {\n    const row = [];\n    for (let cell = 0; cell < width; cell++) {\n        const int = r * width + cell;\n        row.push(<Square key={`c${int}`} cell={int} value={squares[int]} />);\n    }\n    return row;\n}\n\nexport default Board;\nexport { getRows, getRow };\n","export const GAME_TYPES = {\n    MULTIPLES: 'Multiples',\n    FACTORS: 'Factors',\n    PRIMES: 'Primes',\n    EQUALITY: 'Equality',\n    INEQUALITY: 'Inequality',\n    CHALLENGE: 'Challenge',\n};\n","import { GAME_TYPES } from './games';\n\nclass Multiples {\n    constructor(minNum = 2, maxNum = 5, maxMult = 5) {\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n        this.minMult = 1;\n        this.maxMult = maxMult;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        const oldNumber = this.number;\n        while (oldNumber === this.number) {\n            this.number = Math.floor(\n                this.minNum + Math.random() * (this.maxNum - this.minNum + 1)\n            );\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getGame() {\n        return GAME_TYPES.MULTIPLES;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    getMultiple() {\n        // 2/5 of our numbers should match\n        if (Math.random() > 0.4) {\n            return Math.floor(Math.random() * (this.maxMult * this.number));\n        }\n\n        // the others will just be random\n        const rand = Math.floor(\n            this.minMult + Math.random() * (this.maxMult - this.minMult)\n        );\n        return this.number * rand;\n    }\n\n    isMultiple(factor) {\n        return factor % this.number === 0;\n    }\n}\n\nexport default Multiples;\n","import React from 'react';\nimport './Keyboard.css';\n\nfunction Keyboard(props) {\n    const { up, down, left, right, space } = props;\n    return (\n        <div className=\"keyboard\">\n            <button type=\"button\" className=\"up\" onClick={up}>\n                Up\n            </button>\n            <button type=\"button\" className=\"left\" onClick={left}>\n                Left\n            </button>\n            <button type=\"button\" className=\"right\" onClick={right}>\n                Right\n            </button>\n            <button type=\"button\" className=\"down\" onClick={down}>\n                Down\n            </button>\n            <button type=\"button\" className=\"space\" onClick={space}>\n                Space\n            </button>\n        </div>\n    );\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport './Game.css';\nimport Board from '../board/Board';\nimport { GAME_TYPES } from '../../objects/games';\nimport Multiples from '../../objects/Multiples';\nimport Keyboard from '../keyboard/Keyboard';\n\nconst WIDTH = 6;\nconst HEIGHT = 5;\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        const game = new Multiples();\n        const muncher = { x: 2, y: 2 };\n        this.state = {\n            game,\n            level: 1,\n            score: 0,\n            lives: 3,\n            notification: '',\n            muncher,\n            squares: this.setupBoard(game, muncher),\n        };\n\n        this.keyDown = this.keyDown.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', (event) => {\n            this.keyDown(event.code);\n        });\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyDown);\n    }\n\n    setupBoard(game, muncher) {\n        game.resetNumber();\n        const squares = Array(WIDTH * HEIGHT);\n        squares[muncher.y * WIDTH + muncher.x] = '';\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== '') {\n                squares[i] = this.numberFill(game);\n            }\n        }\n        return squares;\n    }\n\n    keyDown(code) {\n        const { notification, game, muncher } = this.state;\n        if (notification === '') {\n            switch (code) {\n                case 'Space':\n                    this.update(this.munch());\n                    if (this.checkLevel()) {\n                        const { level } = this.state;\n                        this.moveMuncher(2 - muncher.x, 2 - muncher.y);\n                        this.setState({\n                            notification: 'You beat the level!',\n                            level: level + 1,\n                            squares: this.setupBoard(game, {\n                                x: 2,\n                                y: 2,\n                            }),\n                        });\n                    }\n                    break;\n                case 'ArrowLeft':\n                    this.moveMuncher(-1, 0);\n                    break;\n                case 'ArrowRight':\n                    this.moveMuncher(1, 0);\n                    break;\n                case 'ArrowUp':\n                    this.moveMuncher(0, -1);\n                    break;\n                case 'ArrowDown':\n                    this.moveMuncher(0, 1);\n                    break;\n                default:\n                // do nothing\n            }\n        } else if (code === 'Space') {\n            this.setState({ notification: '' });\n        }\n    }\n\n    moveMuncher(xc, yc) {\n        const { muncher } = this.state;\n        this.setState({\n            muncher: {\n                x: Math.min(Math.max(0, muncher.x + xc), WIDTH - 1),\n                y: Math.min(Math.max(0, muncher.y + yc), HEIGHT - 1),\n            },\n        });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    numberFill(game) {\n        switch (game.getGame()) {\n            case GAME_TYPES.MULTIPLES:\n                return game.getMultiple();\n            default:\n                return '';\n        }\n    }\n\n    munch() {\n        // get and setup our square\n        const { squares, muncher, game } = this.state;\n        const value = squares[muncher.y * WIDTH + muncher.x];\n        squares[muncher.y * WIDTH + muncher.x] = '';\n        this.setState({ squares });\n\n        // determine if we ate something good\n        let isValid;\n        switch (game.getGame()) {\n            case GAME_TYPES.MULTIPLES:\n                isValid = game.isMultiple(value);\n                break;\n            default:\n                isValid = false;\n        }\n        return { isValid, value };\n    }\n\n    update(inputs) {\n        const { isValid, value } = inputs;\n        let { score, lives } = this.state;\n        const { game } = this.state;\n\n        if (isValid && value !== '') {\n            score += 5;\n        } else if (!isValid) {\n            const compare = game.getGame().slice(0, game.getGame().length - 1);\n            this.setState({\n                notification: `\"${value}\" is not a ${compare.toLowerCase()} of \"${game.getNumber()}\".`,\n            });\n            lives--;\n        }\n        this.setState({ score, lives });\n        if (lives === 0) {\n            this.setState({\n                squares: this.setupBoard(game, { x: 2, y: 2 }),\n                muncher: { x: 2, y: 2 },\n                score: 0,\n                lives: 3,\n                level: 1,\n                notification: 'You lost the game!',\n            });\n        }\n    }\n\n    checkLevel() {\n        const { squares, game } = this.state;\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== '') {\n                switch (game.getGame()) {\n                    case GAME_TYPES.MULTIPLES:\n                        if (game.isMultiple(squares[i])) {\n                            return false;\n                        }\n                        break;\n                    default:\n                        return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    render() {\n        const {\n            level,\n            game,\n            muncher,\n            squares,\n            score,\n            lives,\n            notification,\n        } = this.state;\n\n        const munchers = [];\n        for (let i = 0; i < lives; i++) {\n            munchers.push(<span key={i} className=\"life\" />);\n        }\n\n        return (\n            <div className=\"full\">\n                <div className=\"info\">\n                    <div className=\"level\">{`Level: ${level}`}</div>\n                    <div className=\"title\">{`${game.getGame()} of ${game.getNumber()}`}</div>\n                </div>\n                <Board\n                    height={HEIGHT}\n                    width={WIDTH}\n                    muncher={muncher}\n                    squares={squares}\n                    notification={notification}\n                />\n                <div className=\"info\">\n                    <div className=\"score\">\n                        <span>Score:</span>{' '}\n                        <span className=\"points\">{score}</span>\n                    </div>\n                    <div className=\"lives\">{munchers}</div>\n                </div>\n                <Keyboard\n                    up={() => this.keyDown('ArrowUp')}\n                    down={() => this.keyDown('ArrowDown')}\n                    left={() => this.keyDown('ArrowLeft')}\n                    right={() => this.keyDown('ArrowRight')}\n                    space={() => this.keyDown('Space')}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/game/Game';\nimport './index.css';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}