{"version":3,"sources":["components/options/Options.jsx","games/games.js","components/square/Square.jsx","components/muncher/Muncher.jsx","components/notification/Notification.jsx","components/troggle/Troggle.jsx","components/board/Board.jsx","components/status/Status.jsx","components/game/Game.jsx","games/Multiples.jsx","games/Factors.jsx","games/Primes.jsx","menus/Play.jsx","menus/Hall.jsx","menus/Info.jsx","menus/options/Difficulty.jsx","menus/options/Content.jsx","menus/options/Hall.jsx","menus/options/Password.jsx","menus/options/Joystick.jsx","menus/options/Calibrate.jsx","menus/Option.jsx","menus/Quit.jsx","components/menu/Menu.jsx","index.jsx"],"names":["Options","props","options","onClick","listElements","map","option","index","title","getName","selected","className","GAME_TYPES","Square","cell","value","id","Muncher","display","muncherClass","undefined","ref","el","muncher","style","left","getBoundingClientRect","width","position","x","top","height","y","Notification","message","initializeTroggle","WIDTH","HEIGHT","Math","floor","random","abs","direction","Troggle","troggle","troggleClass","getRow","r","squares","movement","row","int","push","click","Board","alert","troggles","notification","handlers","useSwipeable","onSwipedUp","keyDown","onSwipedDown","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trim","theseTroggles","t","length","rows","getRows","Status","status","Game","game","state","level","score","lives","setupBoard","bind","clickedSquare","document","addEventListener","event","code","this","timer","setInterval","removeEventListener","clearInterval","resetNumber","Array","i","getFiller","response","ceil","addTroggle","remove","splice","moveTroggles","setState","troggleMuncherCheck","update","munch","checkLevel","moveMuncher","xc","max","min","yc","timerX","setTimeout","timerY","endGame","isValid","isCorrect","inputs","getError","munchers","getTitle","React","Component","Multiples","minNum","maxNum","maxMult","minMult","oldNumber","number","rand","round","nonMultiple","getMultiple","getNonMultiple","factor","getNumber","Factors","factors","from","_","filter","nonFactor","getFactor","getNonFactor","includes","Primes","primes","nonPrime","getPrime","getNonPrime","Play","question","instructions","Hall","Info","Difficulty","Content","Password","Joystick","Calibrate","Option","Quit","Menu","clickedOption","select","ReactDOM","render","background","getElementById","getScreen","opt"],"mappings":"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","file":"static/js/main.eda18ce1.chunk.js","sourcesContent":["import React from 'react';\nimport './Options.css';\n\nfunction Options(props) {\n    const { options, onClick } = props;\n    const listElements = options.map((option, index) => {\n        const title = option.getName();\n        if (index === props.selected) {\n            return (\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n                <li\n                    key={title}\n                    className=\"selected\"\n                    onClick={() => onClick(index)}\n                >\n                    {title}\n                </li>\n            );\n        }\n        return (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n            <li key={title} onClick={() => onClick(index)}>\n                {title}\n            </li>\n        );\n    });\n    return (\n        <div className=\"options\">\n            <ol>{listElements}</ol>\n        </div>\n    );\n}\n\nexport default Options;\n","export const GAME_TYPES = {\n    MULTIPLES: 'Multiples',\n    FACTORS: 'Factors',\n    PRIMES: 'Primes',\n    EQUALITY: 'Equality',\n    INEQUALITY: 'Inequality',\n    CHALLENGE: 'Challenge',\n};\n","import React from 'react';\nimport './Square.css';\n\nfunction Square(props) {\n    const { cell, value, onClick } = props;\n    return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n        <div key={cell} id={`c${cell}`} className=\"square\" onClick={onClick}>\n            {value}\n        </div>\n    );\n}\n\nexport default Square;\n","import React from 'react';\nimport './Muncher.css';\n\nfunction Muncher(props) {\n    const { display } = props;\n    let muncherClass = 'muncher';\n    if (display !== undefined) {\n        muncherClass = `${muncherClass} ${display}`;\n    }\n    return (\n        <div\n            ref={(el) => {\n                const muncher = el;\n                if (!muncher) return;\n                muncher.style.left = `${\n                    muncher.getBoundingClientRect().width * props.position.x\n                }px`;\n                muncher.style.top = `${\n                    muncher.getBoundingClientRect().height * props.position.y\n                }px`;\n            }}\n            className={muncherClass}\n        />\n    );\n}\n\nexport default Muncher;\n","import React from 'react';\nimport './Notification.css';\n\nfunction Notification(props) {\n    const { message, onClick } = props;\n    return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n        <div className=\"notification\" onClick={onClick}>\n            {message}\n            <br />\n            Press Space Bar to continue.\n        </div>\n    );\n}\n\nexport default Notification;\n","import React from 'react';\nimport './Troggle.css';\n\n/**\n * A method for handling the rendering of a troggle\n * In general a troggle has 3 different properties associated with it:\n * - position (x,y) object\n * - troggle (scientific name)\n * - movement (for some, as (x,y) object)\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Troggle(props) {\n    const { position, troggle } = props;\n    const troggleClass = `troggle ${troggle}`;\n    return (\n        <div\n            ref={(el) => {\n                const troggle = el;\n                if (!troggle) return;\n                troggle.style.left = `${\n                    troggle.getBoundingClientRect().width * position.x\n                }px`;\n                troggle.style.top = `${\n                    troggle.getBoundingClientRect().height * position.y\n                }px`;\n            }}\n            className={troggleClass}\n        />\n    );\n}\n\nfunction moveTroggles(troggles, WIDTH, HEIGHT) {\n    const remove = [];\n    // move any existing troggles\n    for (let t = 0; t < troggles.length; t++) {\n        const troggle = troggles[t];\n        if (troggle.position !== undefined) {\n            troggle.position.x += troggle.direction.x;\n            troggle.position.y += troggle.direction.y;\n            if (\n                troggle.position.x < 0 ||\n                troggle.position.y < 0 ||\n                troggle.position.x > WIDTH - 1 ||\n                troggle.position.y > HEIGHT - 1\n            ) {\n                remove.push(t);\n            }\n        }\n    }\n    // remove any unneeded troggles\n    for (let i = 0; i < remove.length; i++) {\n        troggles.splice(i, 1);\n    }\n    return troggles;\n}\n\nfunction initializeTroggle(WIDTH, HEIGHT) {\n    let x = Math.floor(Math.random() * WIDTH);\n    let y = Math.floor(Math.random() * HEIGHT);\n    if (x > 0 && x < WIDTH - 1) {\n        y = Math.abs(HEIGHT - 1 - y) < Math.abs(0 - y) ? HEIGHT - 1 : 0;\n    }\n    if (y > 0 && y < HEIGHT - 1) {\n        x = Math.abs(WIDTH - 1 - x) < Math.abs(0 - x) ? WIDTH - 1 : 0;\n    }\n    let direction; // TODO - decide direction/movement based on troggle\n    if (x === 0) {\n        direction = { x: 1, y: 0 };\n    } else if (x === WIDTH - 1) {\n        direction = { x: -1, y: 0 };\n    } else if (y === 0) {\n        direction = { x: 0, y: 1 };\n    } else {\n        direction = { x: 0, y: -1 };\n    }\n    return { position: { x, y }, direction };\n}\n\nfunction addTroggle(troggles, level, WIDTH, HEIGHT) {\n    let status = '';\n    // initialize any open troggles\n    for (let t = 0; t < troggles.length; t++) {\n        const troggle = troggles[t];\n        if (troggle.position === undefined) {\n            const { position, direction } = initializeTroggle(WIDTH, HEIGHT);\n            troggle.position = position;\n            troggle.direction = direction;\n        }\n    }\n    // we should consider adding a troggle if the troggle count is less than twice the level (rounded up)\n    if (troggles.length < Math.ceil(level / 2) && Math.random() < 0.2) {\n        troggles.push({ troggle: 'normalus' }); // TODO - decide which monster to deploy based on level\n        status = 'Troggle!';\n    }\n    return { troggles, status };\n}\n\nexport default Troggle;\nexport { moveTroggles, addTroggle, initializeTroggle };\n","import React from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport Square from '../square/Square';\nimport './Board.css';\nimport Muncher from '../muncher/Muncher';\nimport Notification from '../notification/Notification';\nimport Troggle from '../troggle/Troggle';\n\nfunction Board(props) {\n    const {\n        height,\n        width,\n        squares,\n        muncher,\n        troggles,\n        notification,\n        movement,\n    } = props;\n    const handlers = useSwipeable({\n        onSwipedUp: () => movement.keyDown('ArrowUp'),\n        onSwipedDown: () => movement.keyDown('ArrowDown'),\n        onSwipedLeft: () => movement.keyDown('ArrowLeft'),\n        onSwipedRight: () => movement.keyDown('ArrowRight'),\n        preventDefaultTouchmoveEvent: true,\n    });\n    let alert;\n    if (notification != null && notification.trim() !== '') {\n        alert = (\n            <Notification\n                message={notification}\n                onClick={() => movement.keyDown('Space')}\n            />\n        );\n    }\n    const theseTroggles = [];\n    for (let t = 0; t < troggles.length; t++) {\n        const troggle = troggles[t];\n        if (troggle.position !== undefined) {\n            theseTroggles.push(\n                <Troggle\n                    key={t}\n                    position={troggle.position}\n                    troggle={troggle.troggle}\n                />\n            );\n        }\n    }\n    const rows = getRows(height, width, squares, movement);\n    return (\n        <div className=\"board\" {...handlers}>\n            <Muncher position={muncher} display={muncher.display} />\n            {theseTroggles}\n            {alert}\n            {rows}\n        </div>\n    );\n}\n\nfunction getRows(height, width, squares, movement) {\n    const rows = [];\n    for (let r = 0; r < height; r++) {\n        const row = getRow(width, r, squares, movement);\n        rows.push(\n            <div key={`row${r}`} className=\"board-row\">\n                {row}\n            </div>\n        );\n    }\n    return rows;\n}\n\nfunction getRow(width, r, squares, movement) {\n    const row = [];\n    for (let cell = 0; cell < width; cell++) {\n        const int = r * width + cell;\n        row.push(\n            <Square\n                key={`c${int}`}\n                cell={int}\n                value={squares[int]}\n                onClick={() => movement.click(cell, r)}\n            />\n        );\n    }\n    return row;\n}\n\nexport default Board;\nexport { getRows, getRow };\n","import React from 'react';\nimport './Status.css';\n\nfunction Status(props) {\n    const { status } = props;\n    let message = '';\n    if (status !== undefined && status !== '') {\n        message = <div className=\"status\">{status}</div>;\n    }\n    return message;\n}\n\nexport default Status;\n","import React from 'react';\nimport './Game.css';\nimport Board from '../board/Board';\nimport { addTroggle, moveTroggles } from '../troggle/Troggle';\nimport Status from '../status/Status';\n\nconst WIDTH = 6;\nconst HEIGHT = 5;\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        const { game } = props;\n        const muncher = { x: 2, y: 2 };\n        this.state = {\n            game,\n            level: 1,\n            score: 0,\n            lives: 3,\n            notification: '',\n            status: '',\n            muncher,\n            troggles: [],\n            squares: this.setupBoard(game, muncher),\n        };\n\n        this.keyDown = this.keyDown.bind(this);\n        this.clickedSquare = this.clickedSquare.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', (event) => {\n            this.keyDown(event.code);\n        });\n        this.timer = setInterval(() => {\n            this.troggle();\n        }, 4000); // TODO - make this go faster based on the level/troggle\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyDown);\n        clearInterval(this.timer);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    setupBoard(game, muncher) {\n        game.resetNumber();\n        const squares = Array(WIDTH * HEIGHT);\n        squares[muncher.y * WIDTH + muncher.x] = '';\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== '') {\n                squares[i] = game.getFiller();\n            }\n        }\n        return squares;\n    }\n\n    troggle() {\n        const { squares, game, notification, level, troggles } = this.state;\n        if (notification === '') {\n            // handle our troggles\n            const response = addTroggle(\n                moveTroggles(troggles, WIDTH, HEIGHT),\n                level,\n                WIDTH,\n                HEIGHT\n            );\n            // change the numbers behind any\n            for (let i = 0; i < response.troggles.length; i++) {\n                const troggle = response.troggles[i];\n                if (\n                    troggle.position !== undefined &&\n                    squares[troggle.position.y * WIDTH + troggle.position.x] !==\n                        ''\n                ) {\n                    squares[troggle.position.y * WIDTH + troggle.position.x] =\n                        game.getFiller();\n                }\n            }\n            this.setState({\n                troggles: response.troggles,\n                status: response.status,\n                squares,\n            });\n            this.troggleMuncherCheck();\n        }\n    }\n\n    keyDown(code) {\n        const { notification, game, muncher } = this.state;\n        if (notification === '') {\n            switch (code) {\n                case 'Space':\n                    this.update(this.munch());\n                    if (this.checkLevel()) {\n                        const { level } = this.state;\n                        this.moveMuncher(2 - muncher.x, 2 - muncher.y);\n                        this.setState({\n                            notification: 'You beat the level!',\n                            level: level + 1,\n                            troggles: [],\n                            status: '',\n                            squares: this.setupBoard(game, {\n                                x: 2,\n                                y: 2,\n                            }),\n                        });\n                    }\n                    break;\n                case 'ArrowLeft':\n                    this.moveMuncher(-1, 0);\n                    break;\n                case 'ArrowRight':\n                    this.moveMuncher(1, 0);\n                    break;\n                case 'ArrowUp':\n                    this.moveMuncher(0, -1);\n                    break;\n                case 'ArrowDown':\n                    this.moveMuncher(0, 1);\n                    break;\n                default:\n                // do nothing\n            }\n        } else if (code === 'Space') {\n            this.setState({ notification: '' });\n        }\n    }\n\n    clickedSquare(x, y) {\n        const { muncher, notification } = this.state;\n        if (notification !== '') {\n            return;\n        }\n        if (x === muncher.x && y === muncher.y) {\n            // eat this number\n            this.keyDown('Space');\n        } else {\n            // move to the square\n            const xc = Math.max(Math.min(x - muncher.x, 1), -1); // move left if lower, right if higher, not at all if same\n            const yc = Math.max(Math.min(y - muncher.y, 1), -1); // move up if lower, down if higher, not at all if same\n            this.timerX = setInterval(() => {\n                // move on the x-axis\n                this.moveMuncher(xc, 0);\n                const { muncher } = this.state;\n                if (x === muncher.x) {\n                    clearInterval(this.timerX);\n                }\n            }, 200);\n            setTimeout(() => {\n                // move on the y-axis\n                this.timerY = setInterval(() => {\n                    this.moveMuncher(0, yc);\n                    const { muncher } = this.state;\n                    if (y === muncher.y) {\n                        clearInterval(this.timerY);\n                    }\n                }, 200);\n            }, 100);\n        }\n    }\n\n    moveMuncher(xc, yc) {\n        // TODO - need to figure out how to animate this\n        const { muncher } = this.state;\n        this.setState({\n            muncher: {\n                x: Math.min(Math.max(0, muncher.x + xc), WIDTH - 1),\n                y: Math.min(Math.max(0, muncher.y + yc), HEIGHT - 1),\n            },\n        });\n        this.troggleMuncherCheck();\n    }\n\n    troggleMuncherCheck() {\n        const { troggles, muncher } = this.state;\n        let { lives } = this.state;\n        for (let t = 0; t < troggles.length; t++) {\n            const troggle = troggles[t];\n            if (\n                troggle.position !== undefined &&\n                troggle.position.x === muncher.x &&\n                troggle.position.y === muncher.y\n            ) {\n                lives--;\n                muncher.display = 'none';\n                clearInterval(this.timerX);\n                clearInterval(this.timerY);\n                this.setState({\n                    notification: `Yikes! You were eaten by a Trogglus ${troggle.troggle}.`,\n                    lives,\n                    muncher,\n                });\n                this.endGame();\n                break;\n            } else {\n                muncher.display = '';\n                this.setState({ muncher });\n            }\n        }\n    }\n\n    endGame() {\n        const { lives, game } = this.state;\n        if (lives === 0) {\n            this.setState({\n                squares: this.setupBoard(game, { x: 2, y: 2 }),\n                muncher: { x: 2, y: 2 },\n                score: 0,\n                lives: 3,\n                level: 1,\n                notification: 'You lost the game!',\n                troggles: [],\n                status: '',\n            });\n        }\n    }\n\n    munch() {\n        // get and setup our square\n        const { squares, muncher, game } = this.state;\n        const value = squares[muncher.y * WIDTH + muncher.x];\n        squares[muncher.y * WIDTH + muncher.x] = '';\n        this.setState({ squares });\n\n        // determine if we ate something good\n        let isValid = true;\n        if (value !== '') {\n            isValid = game.isCorrect(value);\n        }\n        return { isValid, value };\n    }\n\n    update(inputs) {\n        const { isValid, value } = inputs;\n        let { score, lives } = this.state;\n        const { game } = this.state;\n\n        if (isValid && value !== '') {\n            score += 5;\n        } else if (!isValid) {\n            this.setState({\n                notification: game.getError(value),\n            });\n            lives--;\n        }\n        this.setState({ score, lives });\n        this.endGame();\n    }\n\n    checkLevel() {\n        const { squares, game } = this.state;\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== '') {\n                if (game.isCorrect(squares[i])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    render() {\n        const {\n            level,\n            game,\n            muncher,\n            troggles,\n            squares,\n            score,\n            lives,\n            notification,\n            status,\n        } = this.state;\n\n        const munchers = [];\n        for (let i = 0; i < lives; i++) {\n            munchers.push(<span key={i} className=\"life\" />);\n        }\n\n        return (\n            <div className=\"full\">\n                <div className=\"info\">\n                    <div className=\"level\">{`Level: ${level}`}</div>\n                    <div className=\"title\">{game.getTitle()}</div>\n                </div>\n                <Status status={status} />\n                <Board\n                    height={HEIGHT}\n                    width={WIDTH}\n                    troggles={troggles}\n                    muncher={muncher}\n                    squares={squares}\n                    notification={notification}\n                    movement={{\n                        keyDown: this.keyDown,\n                        click: (x, y) => this.clickedSquare(x, y),\n                    }}\n                />\n                <div className=\"info\">\n                    <div className=\"score\">\n                        <span>Score:</span>{' '}\n                        <span className=\"points\">{score}</span>\n                    </div>\n                    <div className=\"lives\">{munchers}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from 'react';\nimport { GAME_TYPES } from './games';\nimport Game from '../components/game/Game';\n\nclass Multiples {\n    constructor(minNum = 2, maxNum = 5, maxMult = 5) {\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n        this.minMult = 1;\n        this.maxMult = maxMult;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        const oldNumber = this.number;\n        while (oldNumber === this.number) {\n            this.number = Math.floor(\n                this.minNum + Math.random() * (this.maxNum - this.minNum + 1)\n            );\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return GAME_TYPES.MULTIPLES;\n    }\n\n    getScreen() {\n        return <Game game={this} />;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    getTitle() {\n        return `${this.getName()} of ${this.number}`;\n    }\n\n    getMultiple() {\n        const rand =\n            this.minMult +\n            Math.round(Math.random() * (this.maxMult - this.minMult));\n        return this.number * rand;\n    }\n\n    getNonMultiple() {\n        let nonMultiple = 0;\n        while (this.isCorrect(nonMultiple)) {\n            nonMultiple =\n                Math.floor(Math.random() * (this.maxMult * this.number)) + 1;\n        }\n        return nonMultiple;\n    }\n\n    getFiller() {\n        // 2/5 of our numbers should match\n        if (Math.random() < 0.4) {\n            return this.getMultiple();\n        }\n        // the others will just be random\n        return this.getNonMultiple();\n    }\n\n    isCorrect(factor) {\n        return factor % this.number === 0;\n    }\n\n    getError(factor) {\n        return `\"${factor}\" is not a multiple of \"${this.getNumber()}\".`;\n    }\n}\n\nexport default Multiples;\n","import React from 'react';\nimport { GAME_TYPES } from './games';\nimport Game from '../components/game/Game';\n\nclass Factors {\n    constructor(minNum = 3, maxNum = 25) {\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        const oldNumber = this.number;\n        while (oldNumber === this.number) {\n            this.number = Math.floor(\n                this.minNum + Math.random() * (this.maxNum - this.minNum + 1)\n            );\n        }\n        this.factors = Array.from(Array(this.number + 1), (_, i) => i).filter(\n            (i) => this.number % i === 0\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return GAME_TYPES.FACTORS;\n    }\n\n    getScreen() {\n        return <Game game={this} />;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    getTitle() {\n        return `${this.getName()} of ${this.number}`;\n    }\n\n    getFactor() {\n        return this.factors[Math.floor(Math.random() * this.factors.length)];\n    }\n\n    getNonFactor() {\n        let nonFactor = 1;\n        while (this.isCorrect(nonFactor)) {\n            nonFactor = 1 + Math.floor(Math.random() * this.number);\n        }\n        return nonFactor;\n    }\n\n    getFiller() {\n        // 2/5 of our numbers should match\n        if (Math.random() < 0.4) {\n            return this.getFactor();\n        }\n        // the others will just be random\n        return this.getNonFactor();\n    }\n\n    isCorrect(factor) {\n        return this.factors.includes(factor);\n    }\n\n    getError(factor) {\n        return `\"${factor}\" is not a factor of \"${this.getNumber()}\".`;\n    }\n}\n\nexport default Factors;\n","import React from 'react';\nimport { GAME_TYPES } from './games';\nimport Game from '../components/game/Game';\n\nclass Primes {\n    constructor(minNum = 2, maxNum = 7) {\n        const primes = [\n            2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\n            67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\n            139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n        ];\n\n        this.primes = primes.filter((x) => x >= minNum && x <= maxNum);\n\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        this.number = null;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return GAME_TYPES.PRIMES;\n    }\n\n    getScreen() {\n        return <Game game={this} />;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getTitle() {\n        return `Prime Numbers`;\n    }\n\n    getPrime() {\n        return this.primes[Math.floor(Math.random() * this.primes.length)];\n    }\n\n    getNonPrime() {\n        let nonPrime = 2;\n        while (this.isCorrect(nonPrime)) {\n            nonPrime = 1 + Math.floor(Math.random() * this.maxNum);\n        }\n        return nonPrime;\n    }\n\n    getFiller() {\n        // 2/5 of our numbers should match\n        if (Math.random() < 0.4) {\n            return this.getPrime();\n        }\n        // the others will just be random\n        return this.getNonPrime();\n    }\n\n    isCorrect(number) {\n        return this.primes.includes(number);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getError(number) {\n        return `The number \"${number}\" is not prime.`;\n    }\n}\n\nexport default Primes;\n","import React from 'react';\nimport Multiples from '../games/Multiples';\nimport Factors from '../games/Factors';\nimport Primes from '../games/Primes';\n// eslint-disable-next-line import/no-cycle\nimport Menu from '../components/menu/Menu';\n\nclass Play {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Play Number Munchers';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getScreen() {\n        return (\n            <Menu\n                question=\"Which Number Munchers game would you like to play\"\n                options={[new Multiples(), new Factors(), new Primes()]}\n                instructions=\"Use Arrows to move, then press Enter\"\n            />\n        );\n    }\n}\n\nexport default Play;\n","class Hall {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Hall of Fame';\n    }\n}\n\nexport default Hall;\n","class Info {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Information';\n    }\n}\n\nexport default Info;\n","class Difficulty {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Set Difficulty Level';\n    }\n}\n\nexport default Difficulty;\n","class Content {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Set Content';\n    }\n}\n\nexport default Content;\n","class Hall {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Erase Hall of Fame';\n    }\n}\n\nexport default Hall;\n","class Password {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Set Password';\n    }\n}\n\nexport default Password;\n","class Joystick {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Turn Joystick ON';\n    }\n}\n\nexport default Joystick;\n","class Calibrate {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Calibrate Joystick';\n    }\n}\n\nexport default Calibrate;\n","import React from 'react';\n// eslint-disable-next-line import/no-cycle\nimport Menu from '../components/menu/Menu';\nimport Difficulty from './options/Difficulty';\nimport Content from './options/Content';\nimport Hall from './options/Hall';\nimport Password from './options/Password';\nimport Joystick from './options/Joystick';\nimport Calibrate from './options/Calibrate';\n\nclass Option {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Options';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getScreen() {\n        return (\n            <Menu\n                question=\"Choose an option:\"\n                options={[\n                    new Difficulty(),\n                    new Content(),\n                    new Hall(),\n                    new Password(),\n                    new Joystick(),\n                    new Calibrate(),\n                ]}\n                instructions=\"Use Arrows to move, then press Enter. Escape: Main Menu\"\n            />\n        );\n    }\n}\n\nexport default Option;\n","class Quit {\n    // eslint-disable-next-line class-methods-use-this\n    getName() {\n        return 'Quit';\n    }\n}\n\nexport default Quit;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './Menu.css';\nimport Options from '../options/Options';\n// eslint-disable-next-line import/no-cycle\nimport Play from '../../menus/Play';\nimport Hall from '../../menus/Hall';\nimport Info from '../../menus/Info';\n// eslint-disable-next-line import/no-cycle\nimport Option from '../../menus/Option';\nimport Quit from '../../menus/Quit';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: 0,\n        };\n        this.keyDown = this.keyDown.bind(this);\n        this.clickedOption = this.clickedOption.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', (event) => {\n            this.keyDown(event.code);\n        });\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown(code) {\n        switch (code) {\n            case 'Enter':\n                this.select();\n                break;\n            case 'ArrowLeft':\n            case 'ArrowUp':\n                this.select(-1);\n                break;\n            case 'ArrowRight':\n            case 'ArrowDown':\n                this.select(1);\n                break;\n            case 'Escape':\n                document.removeEventListener('keydown', this.keyDown);\n                ReactDOM.render(\n                    <Menu\n                        question=\"\"\n                        options={[\n                            new Play(),\n                            new Hall(),\n                            new Info(),\n                            new Option(),\n                            new Quit(),\n                        ]}\n                        instructions=\"Use Arrows to move, then press Enter\"\n                        background=\"opening\"\n                    />,\n                    document.getElementById('root')\n                );\n                break;\n            default:\n            // do nothing\n        }\n    }\n\n    clickedOption(option) {\n        const { selected } = this.state;\n        if (option === selected) {\n            this.select();\n        } else {\n            this.setState({ selected: option });\n        }\n    }\n\n    select(movement) {\n        let { selected } = this.state;\n        const { options } = this.props;\n        if (movement === undefined) {\n            document.removeEventListener('keydown', this.keyDown);\n            ReactDOM.render(\n                options[selected].getScreen(),\n                document.getElementById('root')\n            );\n        } else {\n            selected += movement;\n            if (selected < 0) {\n                selected = options.length - 1;\n            } else if (selected >= options.length) {\n                selected = 0;\n            }\n            this.setState({ selected });\n        }\n    }\n\n    render() {\n        const { question, options, instructions, background } = this.props;\n        const { selected } = this.state;\n        const className = `menu ${background}`;\n        return (\n            <div className=\"all\">\n                <div className={className}>\n                    <div className=\"text\">{question}</div>\n                    <Options\n                        options={options}\n                        selected={selected}\n                        onClick={(opt) => this.clickedOption(opt)}\n                    />\n                    <div className=\"text\">{instructions}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from './components/menu/Menu';\nimport './index.css';\nimport Play from './menus/Play';\nimport Hall from './menus/Hall';\nimport Info from './menus/Info';\nimport Option from './menus/Option';\nimport Quit from './menus/Quit';\n\nReactDOM.render(\n    <Menu\n        question=\"\"\n        options={[new Play(), new Hall(), new Info(), new Option(), new Quit()]}\n        instructions=\"Use Arrows to move, then press Enter\"\n        background=\"opening\"\n    />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}