{"version":3,"sources":["components/keyboard/Keyboard.jsx","components/options/Options.jsx","components/square/Square.jsx","components/muncher/Muncher.jsx","components/notification/Notification.jsx","components/board/Board.jsx","components/game/Game.jsx","components/menu/Menu.jsx","objects/games.js","objects/Multiples.js","objects/Factors.js","objects/Primes.js","index.jsx"],"names":["Keyboard","props","up","down","left","right","space","enter","className","type","onClick","Options","listElements","options","map","option","index","selected","getGame","Square","cell","value","id","Muncher","ref","el","muncher","style","getBoundingClientRect","width","position","x","top","height","y","Notification","message","getRow","r","squares","row","int","push","Board","alert","notification","trim","rows","getRows","Game","game","state","level","score","lives","setupBoard","keyDown","bind","document","addEventListener","event","code","removeEventListener","this","resetNumber","Array","WIDTH","i","length","getFiller","update","munch","checkLevel","moveMuncher","setState","xc","yc","Math","min","max","HEIGHT","isValid","isCorrect","inputs","getError","munchers","getTitle","React","Component","Menu","select","movement","undefined","ReactDOM","render","getElementById","question","instructions","GAME_TYPES","Multiples","minNum","maxNum","maxMult","minMult","oldNumber","number","floor","random","rand","round","nonMultiple","getMultiple","getNonMultiple","factor","getNumber","Factors","factors","from","_","filter","nonFactor","getFactor","getNonFactor","includes","Primes","primes","nonPrime","getPrime","getNonPrime"],"mappings":"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","file":"static/js/main.874c8f8a.chunk.js","sourcesContent":["import React from 'react';\nimport './Keyboard.css';\n\nfunction Keyboard(props) {\n    const { up, down, left, right, space, enter } = props;\n    return (\n        <div className=\"keyboard\">\n            <button type=\"button\" className=\"enter\" onClick={enter}>\n                Enter\n            </button>\n            <button type=\"button\" className=\"up\" onClick={up}>\n                Up\n            </button>\n            <button type=\"button\" className=\"left\" onClick={left}>\n                Left\n            </button>\n            <button type=\"button\" className=\"right\" onClick={right}>\n                Right\n            </button>\n            <button type=\"button\" className=\"down\" onClick={down}>\n                Down\n            </button>\n            <button type=\"button\" className=\"space\" onClick={space}>\n                Space\n            </button>\n        </div>\n    );\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport './Options.css';\n\nfunction Options(props) {\n    const { options } = props;\n    const listElements = options.map((option, index) => {\n        if (index === props.selected) {\n            return (\n                <li key={option.getGame()} className=\"selected\">\n                    {option.getGame()}\n                </li>\n            );\n        }\n        return <li key={option.getGame()}>{option.getGame()}</li>;\n    });\n    return (\n        <div className=\"options\">\n            <ol>{listElements}</ol>\n        </div>\n    );\n}\n\nexport default Options;\n","import React from 'react';\nimport './Square.css';\n\nfunction Square(props) {\n    const { cell, value } = props;\n    return (\n        <div key={cell} id={`c${cell}`} className=\"square\">\n            {value}\n        </div>\n    );\n}\n\nexport default Square;\n","import React from 'react';\nimport './Muncher.css';\n\nfunction Muncher(props) {\n    return (\n        <div\n            ref={(el) => {\n                const muncher = el;\n                if (!muncher) return;\n                muncher.style.left = `${\n                    muncher.getBoundingClientRect().width * props.position.x\n                }px`;\n                muncher.style.top = `${\n                    muncher.getBoundingClientRect().height * props.position.y\n                }px`;\n            }}\n            className=\"muncher\"\n        />\n    );\n}\n\nexport default Muncher;\n","import React from 'react';\nimport './Notification.css';\n\nfunction Notification(props) {\n    const { message } = props;\n    return (\n        <div className=\"notification\">\n            {message}\n            <br />\n            Press Space Bar to continue.\n        </div>\n    );\n}\n\nexport default Notification;\n","import React from 'react';\nimport Square from '../square/Square';\nimport './Board.css';\nimport Muncher from '../muncher/Muncher';\nimport Notification from '../notification/Notification';\n\nfunction Board(props) {\n    const { height, width, squares, muncher, notification } = props;\n    let alert;\n    if (notification != null && notification.trim() !== '') {\n        alert = <Notification message={notification} />;\n    }\n    const rows = getRows(height, width, squares);\n    return (\n        <div className=\"board\">\n            <Muncher position={muncher} />\n            {alert}\n            {rows}\n        </div>\n    );\n}\n\nfunction getRows(height, width, squares) {\n    const rows = [];\n    for (let r = 0; r < height; r++) {\n        const row = getRow(width, r, squares);\n        rows.push(\n            <div key={`row${r}`} className=\"board-row\">\n                {row}\n            </div>\n        );\n    }\n    return rows;\n}\n\nfunction getRow(width, r, squares) {\n    const row = [];\n    for (let cell = 0; cell < width; cell++) {\n        const int = r * width + cell;\n        row.push(<Square key={`c${int}`} cell={int} value={squares[int]} />);\n    }\n    return row;\n}\n\nexport default Board;\nexport { getRows, getRow };\n","import React from 'react';\nimport './Game.css';\nimport Board from '../board/Board';\nimport Keyboard from '../keyboard/Keyboard';\n\nconst WIDTH = 6;\nconst HEIGHT = 5;\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        const { game } = props;\n        const muncher = { x: 2, y: 2 };\n        this.state = {\n            game,\n            level: 1,\n            score: 0,\n            lives: 3,\n            notification: '',\n            muncher,\n            squares: this.setupBoard(game, muncher),\n        };\n\n        this.keyDown = this.keyDown.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', (event) => {\n            this.keyDown(event.code);\n        });\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyDown);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    setupBoard(game, muncher) {\n        game.resetNumber();\n        const squares = Array(WIDTH * HEIGHT);\n        squares[muncher.y * WIDTH + muncher.x] = '';\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== '') {\n                squares[i] = game.getFiller();\n            }\n        }\n        return squares;\n    }\n\n    keyDown(code) {\n        const { notification, game, muncher } = this.state;\n        if (notification === '') {\n            switch (code) {\n                case 'Space':\n                    this.update(this.munch());\n                    if (this.checkLevel()) {\n                        const { level } = this.state;\n                        this.moveMuncher(2 - muncher.x, 2 - muncher.y);\n                        this.setState({\n                            notification: 'You beat the level!',\n                            level: level + 1,\n                            squares: this.setupBoard(game, {\n                                x: 2,\n                                y: 2,\n                            }),\n                        });\n                    }\n                    break;\n                case 'ArrowLeft':\n                    this.moveMuncher(-1, 0);\n                    break;\n                case 'ArrowRight':\n                    this.moveMuncher(1, 0);\n                    break;\n                case 'ArrowUp':\n                    this.moveMuncher(0, -1);\n                    break;\n                case 'ArrowDown':\n                    this.moveMuncher(0, 1);\n                    break;\n                default:\n                // do nothing\n            }\n        } else if (code === 'Space') {\n            this.setState({ notification: '' });\n        }\n    }\n\n    moveMuncher(xc, yc) {\n        const { muncher } = this.state;\n        this.setState({\n            muncher: {\n                x: Math.min(Math.max(0, muncher.x + xc), WIDTH - 1),\n                y: Math.min(Math.max(0, muncher.y + yc), HEIGHT - 1),\n            },\n        });\n    }\n\n    munch() {\n        // get and setup our square\n        const { squares, muncher, game } = this.state;\n        const value = squares[muncher.y * WIDTH + muncher.x];\n        squares[muncher.y * WIDTH + muncher.x] = '';\n        this.setState({ squares });\n\n        // determine if we ate something good\n        let isValid = true;\n        if (value !== '') {\n            isValid = game.isCorrect(value);\n        }\n        return { isValid, value };\n    }\n\n    update(inputs) {\n        const { isValid, value } = inputs;\n        let { score, lives } = this.state;\n        const { game } = this.state;\n\n        if (isValid && value !== '') {\n            score += 5;\n        } else if (!isValid) {\n            this.setState({\n                notification: game.getError(value),\n            });\n            lives--;\n        }\n        this.setState({ score, lives });\n        if (lives === 0) {\n            this.setState({\n                squares: this.setupBoard(game, { x: 2, y: 2 }),\n                muncher: { x: 2, y: 2 },\n                score: 0,\n                lives: 3,\n                level: 1,\n                notification: 'You lost the game!',\n            });\n        }\n    }\n\n    checkLevel() {\n        const { squares, game } = this.state;\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== '') {\n                if (game.isCorrect(squares[i])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    render() {\n        const { level, game, muncher, squares, score, lives, notification } =\n            this.state;\n\n        const munchers = [];\n        for (let i = 0; i < lives; i++) {\n            munchers.push(<span key={i} className=\"life\" />);\n        }\n\n        return (\n            <div className=\"full\">\n                <div className=\"info\">\n                    <div className=\"level\">{`Level: ${level}`}</div>\n                    <div className=\"title\">{game.getTitle()}</div>\n                </div>\n                <Board\n                    height={HEIGHT}\n                    width={WIDTH}\n                    muncher={muncher}\n                    squares={squares}\n                    notification={notification}\n                />\n                <div className=\"info\">\n                    <div className=\"score\">\n                        <span>Score:</span>{' '}\n                        <span className=\"points\">{score}</span>\n                    </div>\n                    <div className=\"lives\">{munchers}</div>\n                </div>\n                <Keyboard\n                    up={() => this.keyDown('ArrowUp')}\n                    down={() => this.keyDown('ArrowDown')}\n                    left={() => this.keyDown('ArrowLeft')}\n                    right={() => this.keyDown('ArrowRight')}\n                    space={() => this.keyDown('Space')}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './Menu.css';\nimport Keyboard from '../keyboard/Keyboard';\nimport Options from '../options/Options';\nimport Game from '../game/Game';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: 0,\n        };\n        this.keyDown = this.keyDown.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', (event) => {\n            this.keyDown(event.code);\n        });\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown(code) {\n        switch (code) {\n            case 'Enter':\n                this.select();\n                break;\n            case 'ArrowLeft':\n            case 'ArrowUp':\n                this.select(-1);\n                break;\n            case 'ArrowRight':\n            case 'ArrowDown':\n                this.select(1);\n                break;\n            default:\n            // do nothing\n        }\n    }\n\n    select(movement) {\n        let { selected } = this.state;\n        const { options } = this.props;\n        if (movement === undefined) {\n            const game = options[selected];\n            ReactDOM.render(\n                <Game game={game} />,\n                document.getElementById('root')\n            );\n        } else {\n            selected += movement;\n            if (selected < 0) {\n                selected = options.length - 1;\n            } else if (selected >= options.length) {\n                selected = 0;\n            }\n            this.setState({ selected });\n        }\n    }\n\n    render() {\n        const { question, options, instructions } = this.props;\n        const { selected } = this.state;\n        return (\n            <div className=\"all\">\n                <div className=\"menu\">\n                    <div className=\"text\">{question}</div>\n                    <Options options={options} selected={selected} />\n                    <div className=\"text\">{instructions}</div>\n                </div>\n                <Keyboard\n                    up={() => this.keyDown('ArrowUp')}\n                    down={() => this.keyDown('ArrowDown')}\n                    left={() => this.keyDown('ArrowLeft')}\n                    right={() => this.keyDown('ArrowRight')}\n                    enter={() => this.keyDown('Enter')}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","export const GAME_TYPES = {\n    MULTIPLES: 'Multiples',\n    FACTORS: 'Factors',\n    PRIMES: 'Primes',\n    EQUALITY: 'Equality',\n    INEQUALITY: 'Inequality',\n    CHALLENGE: 'Challenge',\n};\n","import { GAME_TYPES } from './games';\n\nclass Multiples {\n    constructor(minNum = 2, maxNum = 5, maxMult = 5) {\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n        this.minMult = 1;\n        this.maxMult = maxMult;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        const oldNumber = this.number;\n        while (oldNumber === this.number) {\n            this.number = Math.floor(\n                this.minNum + Math.random() * (this.maxNum - this.minNum + 1)\n            );\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getGame() {\n        return GAME_TYPES.MULTIPLES;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    getTitle() {\n        return `${this.getGame()} of ${this.number}`;\n    }\n\n    getMultiple() {\n        const rand =\n            this.minMult +\n            Math.round(Math.random() * (this.maxMult - this.minMult));\n        return this.number * rand;\n    }\n\n    getNonMultiple() {\n        let nonMultiple = 0;\n        while (this.isCorrect(nonMultiple)) {\n            nonMultiple =\n                Math.floor(Math.random() * (this.maxMult * this.number)) + 1;\n        }\n        return nonMultiple;\n    }\n\n    getFiller() {\n        // 2/5 of our numbers should match\n        if (Math.random() < 0.4) {\n            return this.getMultiple();\n        }\n        // the others will just be random\n        return this.getNonMultiple();\n    }\n\n    isCorrect(factor) {\n        return factor % this.number === 0;\n    }\n\n    getError(factor) {\n        return `\"${factor}\" is not a multiple of \"${this.getNumber()}\".`;\n    }\n}\n\nexport default Multiples;\n","import { GAME_TYPES } from './games';\n\nclass Factors {\n    constructor(minNum = 3, maxNum = 25) {\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        const oldNumber = this.number;\n        while (oldNumber === this.number) {\n            this.number = Math.floor(\n                this.minNum + Math.random() * (this.maxNum - this.minNum + 1)\n            );\n        }\n        this.factors = Array.from(Array(this.number + 1), (_, i) => i).filter(\n            (i) => this.number % i === 0\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getGame() {\n        return GAME_TYPES.FACTORS;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    getTitle() {\n        return `${this.getGame()} of ${this.number}`;\n    }\n\n    getFactor() {\n        return this.factors[Math.floor(Math.random() * this.factors.length)];\n    }\n\n    getNonFactor() {\n        let nonFactor = 1;\n        while (this.isCorrect(nonFactor)) {\n            nonFactor = 1 + Math.floor(Math.random() * this.number);\n        }\n        return nonFactor;\n    }\n\n    getFiller() {\n        // 2/5 of our numbers should match\n        if (Math.random() < 0.4) {\n            return this.getFactor();\n        }\n        // the others will just be random\n        return this.getNonFactor();\n    }\n\n    isCorrect(factor) {\n        return this.factors.includes(factor);\n    }\n\n    getError(factor) {\n        return `\"${factor}\" is not a factor of \"${this.getNumber()}\".`;\n    }\n}\n\nexport default Factors;\n","import { GAME_TYPES } from './games';\n\nclass Primes {\n    constructor(minNum = 2, maxNum = 7) {\n        const primes = [\n            2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\n            67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\n            139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n        ];\n\n        this.primes = primes.filter((x) => x >= minNum && x <= maxNum);\n\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n\n        this.resetNumber();\n    }\n\n    resetNumber() {\n        this.number = null;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getGame() {\n        return GAME_TYPES.PRIMES;\n    }\n\n    getNumber() {\n        return this.number;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getTitle() {\n        return `Prime Numbers`;\n    }\n\n    getPrime() {\n        return this.primes[Math.floor(Math.random() * this.primes.length)];\n    }\n\n    getNonPrime() {\n        let nonPrime = 2;\n        while (this.isCorrect(nonPrime)) {\n            nonPrime = 1 + Math.floor(Math.random() * this.maxNum);\n        }\n        return nonPrime;\n    }\n\n    getFiller() {\n        // 2/5 of our numbers should match\n        if (Math.random() < 0.4) {\n            return this.getPrime();\n        }\n        // the others will just be random\n        return this.getNonPrime();\n    }\n\n    isCorrect(number) {\n        return this.primes.includes(number);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getError(number) {\n        return `The number \"${number}\" is not prime.`;\n    }\n}\n\nexport default Primes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from './components/menu/Menu';\nimport './index.css';\nimport Multiples from './objects/Multiples';\nimport Factors from './objects/Factors';\nimport Primes from './objects/Primes';\n\nReactDOM.render(\n    <Menu\n        question=\"Which Number Munchers game would you like to play\"\n        options={[new Multiples(), new Factors(), new Primes()]}\n        instructions=\"Use Arrows to move, then press Enter\"\n    />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}